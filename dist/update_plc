
function sendDROFloatsThroughModbus()
	local axisPos = mc.mcAxisGetPos(inst, axisID)
	axisPos = tonumber(string.format('%0.4f', tostring(axisPos)))

	local axisPosPrefix = 0
	if axisPos < 0 then
		axisPosPrefix = math.ceil(axisPos)
	else 
		axisPosPrefix = math.floor(axisPos)
	end

	local axisPosDecimal = (axisPos - axisPosPrefix) * 10000

	mc.mcRegSetValueLong(axisDRORegs[droRegsPos], axisPosPrefix)
	droRegsPos = droRegsPos + 1
	mc.mcRegSetValueLong(axisDRORegs[droRegsPos], axisPosDecimal)

	droRegsPos = droRegsPos + 1
	axisID = axisID + 1

	if droRegsPos > #axisDRORegs then
		droRegsPos = 1
		axisID = 0
	end
end

function updateMPGSliderVals()
	if mc.mcSignalGetState(slider1SelReg) == 1 then --2.5
		local slider1Val = mc.mcRegGetValueLong(slider1ValReg) * 2.5
		
		mc.mcCntlSetFRO(inst, slider1Val)
	end

	if mc.mcSignalGetState(slider2SelReg) == 1 then
		local slider2Val = mc.mcRegGetValueLong(slider2ValReg)
		
		mc.mcCntlSetRRO(inst, slider2Val)
	end
		
	if mc.mcSignalGetState(slider3SelReg) == 1 then
		local slider3Val = mc.mcRegGetValueLong(slider3ValReg)

		mc.mcSpindleSetOverride(inst, slider3Val)
	end
end

sendDROFloatsThroughModbus()
updateMPGSliderVals()